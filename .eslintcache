[{"/Users/isfar/Desktop/Traverse2.0/src/index.js":"1","/Users/isfar/Desktop/Traverse2.0/src/App.js":"2","/Users/isfar/Desktop/Traverse2.0/src/components/pages/Friends/Friends.js":"3","/Users/isfar/Desktop/Traverse2.0/src/components/pages/Messages/Messages.js":"4","/Users/isfar/Desktop/Traverse2.0/src/components/pages/HomePage/HomePage.js":"5","/Users/isfar/Desktop/Traverse2.0/src/components/Navbar.js":"6","/Users/isfar/Desktop/Traverse2.0/src/components/SearchBar.js":"7","/Users/isfar/Desktop/Traverse2.0/src/components/pages/Profile/Profile.js":"8"},{"size":222,"mtime":1611952156882,"results":"9","hashOfConfig":"10"},{"size":1546,"mtime":1612153804438,"results":"11","hashOfConfig":"10"},{"size":10832,"mtime":1612151019184,"results":"12","hashOfConfig":"10"},{"size":674,"mtime":1612136368793,"results":"13","hashOfConfig":"10"},{"size":9906,"mtime":1612134894611,"results":"14","hashOfConfig":"10"},{"size":879,"mtime":1612154722002,"results":"15","hashOfConfig":"10"},{"size":459,"mtime":1611976103460,"results":"16","hashOfConfig":"10"},{"size":1315,"mtime":1612154514046,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1enkh5m",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/isfar/Desktop/Traverse2.0/src/index.js",[],["38","39"],"/Users/isfar/Desktop/Traverse2.0/src/App.js",["40"],"/Users/isfar/Desktop/Traverse2.0/src/components/pages/Friends/Friends.js",["41","42","43","44"],"import axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport PlatNavbar from '../../Navbar'\nimport SearchBar from '../../SearchBar'\n\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nfunction Friends() {\n\n    let [friendState, setFriend] = useState('friends')\n\n    let [searchVal, setSearchVal] = useState('')\n    \n    let [fFsearchVal, setfFVal] = useState('')\n\n    let [searchCurrentFriends, setResults] = useState([])\n\n    let [foundUserObj, setFoundUser] = useState({})\n\n    let [requested, setRequestStatus] = useState('none')\n\n    let [friends, setFriends] = useState([])\n\n    \n    let friendHandler = (value) => {\n        setFriend(value)\n        if (value === 'friends'){\n            axios.get('http://localhost:8000/users/getFriends/' + JSON.parse(localStorage.getItem('userObj')).username).then(\n            res => {\n                setFriends(res.data)\n            }\n        )\n        }\n        else if (value === \"requests\"){\n            axios.get('http://localhost:8000/users/'+JSON.parse(localStorage.getItem('userObj')).username).then(\n            response2 => {\n                localStorage.setItem('userObj', JSON.stringify(response2.data.foundUser))\n            }\n            )\n        }\n    }\n\n    let searchChangeHandler = (event) => {\n        setfFVal(event.target.value)\n    }\n\n    const addBtnHandler = () => {\n        axios.get('http://localhost:8000/users/'+JSON.parse(localStorage.getItem('userObj')).username).then(\n            response2 => {\n                localStorage.setItem('userObj', JSON.stringify(response2.data.foundUser))\n\n                if ( !JSON.parse(localStorage.getItem('userObj')).requests.includes(foundUserObj.username) ){\n\n                    axios.post('http://localhost:8000/users/addFriend/' + foundUserObj.username, {user: JSON.parse(localStorage.getItem('userObj'))})\n                    .then(response => {\n                        if (response.data.status === 'request sent'){\n                            setRequestStatus('to')\n                        }\n                        else{\n                            setRequestStatus('none')\n                        }\n                    })\n\n                }\n                else{\n                    setRequestStatus('from')\n                }\n                \n\n            }\n        )\n    }\n\n    let searchHandler = () => {\n        console.log(foundUserObj);\n        if (!(fFsearchVal==='')){\n            console.log(fFsearchVal);\n            axios.get('http://localhost:8000/users/'+fFsearchVal).then(\n                response=>{\n                    if (response.data.status === 'found user'){\n                        console.log('here');\n                        setFoundUser(response.data.foundUser)\n                        if (response.data.foundUser.requests.includes(JSON.parse(localStorage.getItem('userObj')).username)){\n                            console.log('if');\n                            setRequestStatus('to')\n                        }\n                        else if (JSON.parse(localStorage.getItem('userObj')).requests.includes(response.data.foundUser.username)) {\n                            setRequestStatus('from')\n                        }\n                        else if (JSON.parse(localStorage.getItem('userObj')).friends.includes(response.data.foundUser.username)) {\n                            setRequestStatus('friends')\n                        }\n                        else{\n                            console.log('else');\n                            setRequestStatus('none')\n                        }\n                    }\n                    else {\n                        setFoundUser({})\n                    }\n                }\n            )\n        }\n    }\n\n    const searchResultsHandler = (results) => {\n        setResults(results)\n    }\n\n    const acceptBtnHandler = (event) => {\n        console.log(event.target.id);\n        axios.post('http://localhost:8000/users/acceptFriend/'+event.target.id, {currUser: JSON.parse(localStorage.getItem('userObj'))}).then(\n            res => {\n                if (res.data.status === 'friends'){\n                    axios.get('http://localhost:8000/users/'+JSON.parse(localStorage.getItem('userObj')).username).then(\n                    response2 => {\n                        localStorage.setItem('userObj', JSON.stringify(response2.data.foundUser))\n                        window.location = '/friends'\n                    }\n                    )\n                }\n            }\n        )\n    }\n\n\n    // let [friends, setFriends] = useState([])\n\n\n\n    useEffect(()=>{\n        let input = searchVal.toLowerCase().trim();\n        let results = []\n        // console.log(tutorArr);\n        if (input !== ''){\n        for (let i = 0; i < friends.length; i++){\n            const fullname = friends[i].fName.toLowerCase() + \" \" +friends[i].lName.toLowerCase()\n            if (( friends[i].fName.toLowerCase().includes(input))\n            || (friends[i].lName.toLowerCase().includes(input))\n            || (fullname.includes(input))){\n                results.push(friends[i])   \n            }\n        }\n        }\n        \n        setTimeout(50);\n        searchResultsHandler(results)\n    }, [searchVal])\n\n    useEffect(()=> {\n        axios.get('http://localhost:8000/users/'+JSON.parse(localStorage.getItem('userObj')).username).then(\n            response2 => {\n                localStorage.setItem('userObj', JSON.stringify(response2.data.foundUser))\n            }\n            )\n        //TODO: Change location of this because this method is being called too many times according to console.\n        // axios.get('http://localhost:8000/users/getFriends/' + JSON.parse(localStorage.getItem('userObj')).username).then(\n        //     res => {\n        //         setFriends(res.data)\n        //     }\n        // )\n    }, [])\n\n    let searchDiv = <div> <SearchBar \n        placeholder=\"Search for friend\"\n        setSearchVal={setSearchVal}\n    /> </div>\n\n    let friendsDiv = <div className=\"container\">\n        {searchCurrentFriends.length != 0 ? \n            searchCurrentFriends.map((person) => {\n                return (\n                    <React.Fragment>\n                    <h2>\n                        {person.fName + \" \" + person.lName}\n                    </h2>\n                    <hr></hr> \n                    </React.Fragment>\n                )\n            })\n        \n        :\n            friends.map((friend) => {\n                return (\n                <React.Fragment>\n                <h2>{friend.fName + ' ' + friend.lName}</h2>\n                <hr></hr>\n                </React.Fragment>\n                )\n            })\n        }\n    </div>\n\n    let findDiv = <div className=\"container\" style={{height:'200px', overflow: 'hidden'}}>\n        <input onChange={searchChangeHandler} placeholder=\"Search by username\"/>\n        <button className=\"lg\" onClick={searchHandler}>Search</button>\n        {!isEmpty(foundUserObj) ? \n        <React.Fragment>\n            <h2 className=\"h1find\">{foundUserObj.username}</h2>\n            <h2 className=\"h1find\">{foundUserObj.fName + ' ' + foundUserObj.lName}</h2>\n            {foundUserObj.username === JSON.parse(localStorage.getItem('userObj')).username ? \n        null \n        :\n        \n         requested==='to' ? //u already sent a request\n         <h2 className=\"h1find\">Request Sent!</h2> \n         : (requested === 'friends'? \n         <h2 className=\"h1find\">Already Friends!</h2>\n         :\n         (requested === 'from' ? \n            <h2 className=\"h1find\">Sent you request</h2> \n            : \n            <button className=\"lg\" onClick={addBtnHandler}>Add</button>)          \n         )\n         \n        }\n        </React.Fragment>\n        :\n            null\n        }\n        \n        \n    </div>\n\n    let requestDiv = <div className=\"container\">\n\n        {JSON.parse(localStorage.getItem('userObj')).requests.map((request)=>{\n            return (\n                <React.Fragment>\n                <div style={{position: 'relative'}}>\n                    <h2 className=\"h2find\"> {request} </h2>\n                    <button className=\"lg\" id={request} onClick={acceptBtnHandler} style={{position: 'absolute', right: '10px', top: '0'}}>Accept</button>\n                </div>                \n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                <hr></hr>\n                </React.Fragment>\n            )\n        })}\n    </div>\n\n    let friendStatus = \"friends-btn\"\n    let findStatus = \"friends-btn\"\n    let reqStatus = \"friends-btn\"\n\n    \n\n    if (friendState === \"friends\") {\n        friendStatus = \"friends-btn active\"\n        findStatus = \"friends-btn\"\n        reqStatus = \"friends-btn\"\n    }\n    else if (friendState === \"find\") {\n        friendStatus = \"friends-btn\"\n        findStatus = \"friends-btn active\"\n        reqStatus = \"friends-btn\"\n    }\n    else {\n        friendStatus = \"friends-btn\"\n        findStatus = \"friends-btn\"\n        reqStatus = \"friends-btn active\"\n    }\n\n    return (\n        <div>\n            <PlatNavbar />\n            \n            <h3>Friends Hub</h3>\n            <div className=\"hub-container\">\n                <div className=\"tab-container\">\n                    <button className={friendStatus} onClick={() => friendHandler('friends')}><h1 className=\"h1tab\">Friends</h1></button>               \n                    <button className={findStatus} onClick={() => friendHandler('find')}><h1 className=\"h1tab\">Find Friends</h1></button>            \n                    <button className={reqStatus} onClick={() => friendHandler('requests')}><h1 className=\"h1tab\">Requests</h1></button>\n                \n                </div>\n                <div style={{width: '100px'}}></div>\n                {\n                    friendState == 'friends' ? (\n                        <div style={{height: '10px'}}>\n                            {searchDiv}\n                            {friendsDiv}\n                        </div>\n                         \n                    ): (friendState == 'find' ? \n                    <div style={{height: '10px'}}>\n                            {findDiv }\n                        </div>\n                    : \n                    <div style={{height: '10px'}}>\n                            {requestDiv }\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Friends\n","/Users/isfar/Desktop/Traverse2.0/src/components/pages/Messages/Messages.js",[],"/Users/isfar/Desktop/Traverse2.0/src/components/pages/HomePage/HomePage.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58"],"import React, {useState} from 'react'\nimport axios from 'axios'\n\nfunction HomePage(){\n\n    const [login, setLogin] = useState(true)\n\n    const [switchStr, setSwitch] = useState('messaging')\n\n    const [userObj, setUserObj] = useState({})\n\n    const [registerEvent, setRegisterEvent] = useState({\n        username: \"\",\n        fName: \"\",\n        lName: \"\",\n        password: \"\",\n        repPass: \"\"\n    })\n\n    const [loginEvent, setLoginEvent] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const loginButtonHandler = () => {\n        console.log(loginEvent)\n        axios.post('http://localhost:8000/loginRegister/login', loginEvent).then( response => {\n            console.log(response.data);\n            if (response.data.status === \"logged\"){\n                console.log(response.data.userObj);\n                localStorage.setItem('userObj', JSON.stringify(response.data.userObj))\n                window.location = '/messages'\n            }\n            else{\n                alert('Username or password is incorrect. Please try again')\n            }\n        }\n\n        )\n        // window.location = '/'\n    }\n\n    const loginChangeHandler = (event) => {\n        setLoginEvent({\n            ...loginEvent, \n            [event.target.name]: event.target.value\n        })\n    }\n    \n    const registerChangeHandler = (event) => {\n        setRegisterEvent({\n            ...registerEvent,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const switchHandler = (event) => {\n        setSwitch(prev => {\n            if (prev !== event.target.id){\n                return event.target.id\n            }\n        })\n        \n    }\n\n\n    const registerButtonHandler = () => {\n        console.log(registerEvent)\n        axios.post('http://localhost:8000/loginRegister/register', registerEvent).then( response => {\n            if (response.data.status === \"registered\"){\n                window.location = '/'\n            }\n            else{\n                alert('Username or Email already exists')\n            }\n        }\n\n        )\n        // window.location = '/'\n    }\n\n\n    const loginHandler = (value) => {\n        setLogin(value)\n    }\n\n    let lBtn = \"lg\"\n    let rBtn = \"lg\"\n    let height = \"70vh\"\n\n    let content = <div>\n        <h1>Messaging</h1>\n    </div>\n\n    if (login){\n        lBtn = \"gl\"\n    }\n    else{\n        rBtn = \"gl\"\n        height = \"70vh\"\n    }\n\n    if (switchStr === \"event\"){\n        content = <div>\n            <h1>Event Planning</h1>\n        </div>\n    }\n    else if (switchStr === \"sharing\"){\n        content = <div>\n            <h1>Sharing</h1>\n        </div>\n    }\n\n    return (\n        <div style={{height: '100%'}}>\n            <div className='top-section' style={{height: height}}>\n                <header className=\"homepage-header\">\n                    <img src=\"img/logo.png\" className=\"homepage-logo\"/>\n                    <ul className=\"home-nav\">\n                        <li><a href=\"#reviews-begin\" className=\"nav-item\">Reviews</a></li>\n                        <li><a href=\"#intro\" className=\"nav-item\">Features</a></li>\n                        <li><a href=\"#footer-begin\" className=\"nav-item\">Contact Us</a></li>\n                    </ul>\n                </header>\n\n                <img className=\"personH\" src=\"img/personDecision.png\"/>\n            \n                <div className=\"login-register\">\n                    <button className={lBtn} onClick={() => loginHandler(true)}>Login</button>\n                    <button style={{visibility:'hidden', width:'1px'}}></button>\n                    <button className={rBtn} onClick={() => loginHandler(false)}>Register</button>\n                    <br/><br/>\n                    {login ? \n                    <div>\n                        <form>\n                            <label>Email</label>\n                            <br/>\n                            <input name=\"email\" onChange={loginChangeHandler} type=\"email\" required/>\n                            <br/>\n                            <label>Password</label>\n                            <input name=\"password\" onChange={loginChangeHandler} type=\"password\" required/>\n                            <br/><br/>\n                            <button type=\"button\" onClick={loginButtonHandler} className=\"lg\">Log In</button>\n                        </form>\n                    </div>\n                    : \n                    <div>\n                        <form>\n                            <label>Username</label>\n                            <br/>\n                            <input name=\"username\" onChange={registerChangeHandler} required/>\n                            <br/>\n                            <label>First Name</label>\n                            <br/>\n                            <input name=\"fName\" onChange={registerChangeHandler} required/>\n                            <br/>\n                            <label>Last Name</label>\n                            <br/>\n                            <input name=\"lName\" onChange={registerChangeHandler} required/>\n                            <br/>\n                            <label>Email</label>\n                            <br/>\n                            <input name=\"email\" onChange={registerChangeHandler} required/>\n                            <br/>\n                            <label>Password</label>\n                            <br/>\n                            <input name=\"password\" onChange={registerChangeHandler} required/>\n                            <br/>\n                            <label>Repeat Password</label>\n                            <br/>\n                            <input name=\"repPass\" onChange={registerChangeHandler} required/>\n                            <br /><br />\n                            <button type=\"button\" className=\"lg\" onClick={registerButtonHandler}>Register</button>\n                        </form>\n                    </div>\n                    }\n\n                </div>\n\n            </div>\n\n            <div className=\"reviews-container\">\n            <ul id=\"reviews-begin\" className=\"reviews\">\n                        <li>\n                            <div>\n                                <h1>Very Convenient!</h1>\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                            <h1>Very efficient!</h1>\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                            <h1>Very useful!</h1>\n                            </div>\n                        </li>\n                    </ul>\n            </div>\n\n            <a href=\"#intro\"><img className=\"scroll\" src=\"img/bScroll.png\" style={{height: '50px'}}/></a>\n\n            <div id=\"intro\" className=\"features-container\">\n                <h1>Features</h1>\n                <div className=\"switchers-div\">\n                    <button id=\"messaging\" style={switchStr==='messaging'? {backgroundColor: 'tomato'} :null} onClick={switchHandler}></button>\n                    \n                    <div className=\"vl\"></div>\n                    <button id=\"event\" style={switchStr==='event'? {backgroundColor: 'tomato'} :null} onClick={switchHandler}></button>\n                    \n                    <div className=\"vl\"></div>\n                    <button id=\"sharing\" style={switchStr==='sharing'? {backgroundColor: 'tomato'} :null} onClick={switchHandler}></button>\n                    <div className=\"switcher-text\">\n                        <p>Messaging</p>\n                        <p>Event Planning</p>\n                        <p>Sharing</p>\n                    </div>\n                    \n                </div>\n\n                <div className=\"features-content\">\n                    {content}\n                </div>\n                \n            </div>\n\n            <footer id=\"footer-begin\">\n                <div className=\"isfar\" >\n                    <img style={{height:'50px', borderRadius:'50%'}} src=\"img/isfarpic.jpg\"/>\n                    <h1>Isfar Oshir</h1>\n                    <h2>iao233@nyu.edu</h2>\n                    <a href=\"https://www.linkedin.com/in/isfar-oshir-043403190/\" target=\"_blank\" style={{paddingRight: '10px'}}><i className=\"fa fa-linkedin-square socialIcon\"></i></a>\n                    <a href=\"http://www.isfaroshir.com/\" target=\"_blank\" style={{paddingRight: '10px'}}><img src=\"img/isfarcom.png\" style={{height:'15px'}} /></a>\n                    <a href=\"https://github.com/ioshir4350?tab=stars\" target=\"_blank\"><i className=\"fa fa-github socialIcon\" style={{color: 'black'}}></i></a>\n                </div>\n\n                <div className=\"center-design\">\n                    <a href=\"/\"><img style={{height: '20px'}} src=\"img/logo.png\"/></a>\n                    <br /><br />\n                    <hr className=\"leftHR\"/>\n                    <div className=\"circle\"></div>\n                    <hr className=\"rightHR\"/>\n                    \n                    <p style={{fontSize:\"11px\"}}>© 2021 Traverse. All Rights Reserved</p>\n                </div>\n\n                <div className=\"farhan\">\n                    <img style={{height:'50px', borderRadius:'50%'}} src=\"img/farhanpic.jpeg\"/>\n                    <h1>Farhan Mashud</h1>\n                    <h2>fm1539@nyu.edu</h2>\n                    <a href=\"https://www.linkedin.com/in/farhan-m8/\" target=\"_blank\" style={{paddingRight: '10px'}}><i className=\"fa fa-linkedin-square socialIcon\"></i></a>\n                    {/* <a href=\"http://www.isfaroshir.com/\" target=\"_blank\" style={{paddingRight: '10px'}}><img src=\"img/isfarcom.png\" style={{height:'15px'}} /></a> */}\n                    <a href=\"https://github.com/fm1539\" target=\"_blank\"><i className=\"fa fa-github socialIcon\" style={{color: 'black'}}></i></a>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default HomePage","/Users/isfar/Desktop/Traverse2.0/src/components/Navbar.js",["59","60"],"/Users/isfar/Desktop/Traverse2.0/src/components/SearchBar.js",["61"],"import React, { useState } from 'react'\n\n\nfunction SearchBar(props) {\n\n    const searchValHandler = (event) => {\n        props.setSearchVal(event.target.value)\n    }\n\n    return (\n        <div>\n        <input\n            className=\"form-control\"\n            type=\"search\"\n            placeholder={props.placeholder}\n            onChange={searchValHandler}\n            value={props.searchVal}\n        ></input>\n        </div>\n    )\n\n}\n\nexport default SearchBar","/Users/isfar/Desktop/Traverse2.0/src/components/pages/Profile/Profile.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":7,"column":9,"nodeType":"69","messageId":"70","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":150,"column":8,"nodeType":"73","endLine":150,"endColumn":19,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":172,"column":38,"nodeType":"77","messageId":"78","endLine":172,"endColumn":40},{"ruleId":"75","severity":1,"message":"79","line":297,"column":33,"nodeType":"77","messageId":"78","endLine":297,"endColumn":35},{"ruleId":"75","severity":1,"message":"79","line":303,"column":37,"nodeType":"77","messageId":"78","endLine":303,"endColumn":39},{"ruleId":"67","severity":1,"message":"80","line":10,"column":12,"nodeType":"69","messageId":"70","endLine":10,"endColumn":19},{"ruleId":"67","severity":1,"message":"81","line":10,"column":21,"nodeType":"69","messageId":"70","endLine":10,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":118,"column":21,"nodeType":"84","endLine":118,"endColumn":72},{"ruleId":"82","severity":1,"message":"83","line":126,"column":17,"nodeType":"84","endLine":126,"endColumn":72},{"ruleId":"82","severity":1,"message":"83","line":202,"column":30,"nodeType":"84","endLine":202,"endColumn":102},{"ruleId":"82","severity":1,"message":"83","line":230,"column":21,"nodeType":"84","endLine":230,"endColumn":94},{"ruleId":"85","severity":1,"message":"86","line":233,"column":21,"nodeType":"84","endLine":233,"endColumn":129},{"ruleId":"85","severity":1,"message":"86","line":234,"column":21,"nodeType":"84","endLine":234,"endColumn":105},{"ruleId":"82","severity":1,"message":"83","line":234,"column":105,"nodeType":"84","endLine":234,"endColumn":159},{"ruleId":"85","severity":1,"message":"86","line":235,"column":21,"nodeType":"84","endLine":235,"endColumn":87},{"ruleId":"82","severity":1,"message":"83","line":239,"column":33,"nodeType":"84","endLine":239,"endColumn":83},{"ruleId":"82","severity":1,"message":"83","line":249,"column":21,"nodeType":"84","endLine":249,"endColumn":96},{"ruleId":"85","severity":1,"message":"86","line":252,"column":21,"nodeType":"84","endLine":252,"endColumn":117},{"ruleId":"85","severity":1,"message":"86","line":254,"column":21,"nodeType":"84","endLine":254,"endColumn":73},{"ruleId":"82","severity":1,"message":"83","line":13,"column":21,"nodeType":"84","endLine":13,"endColumn":72},{"ruleId":"87","severity":1,"message":"88","line":18,"column":29,"nodeType":"84","endLine":18,"endColumn":82},{"ruleId":"67","severity":1,"message":"89","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"90","line":29,"column":8,"nodeType":"73","endLine":29,"endColumn":10,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'friends'. Either include it or remove the dependency array.","ArrayExpression",["94"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'userObj' is assigned a value but never used.","'setUserObj' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [friends, searchVal]",{"range":"100","text":"101"},"Update the dependencies array to be: [userId]",{"range":"102","text":"103"},[5204,5215],"[friends, searchVal]",[900,902],"[userId]"]